---
import { loadCurrentCartServiceConfig } from '@wix/headless-ecom/services';
import { SEO } from '@wix/headless-seo/react';
import { loadSEOTagsServiceConfig } from '@wix/headless-seo/services';
import {
  loadCategoriesListServiceConfig,
  loadCategoryServiceConfig,
  loadProductsListSearchServiceConfig,
  loadProductsListServiceConfig,
  parseUrlForProductsListSearch,
} from '@wix/headless-stores/services';
import BaseLayout from '../../layouts/BaseLayout.astro';
import StoreCollectionPage from '../../react-pages/category/index';

// Get category slug from URL params
const { categorySlug = '' } = Astro.params;

// Load categories first so we can pass them to parseUrlForProductsListSearch
const categoriesListConfig = await loadCategoriesListServiceConfig();
const category = categoriesListConfig.categories.find(
  category => category.slug === categorySlug
);

if (!category) {
  return Astro.rewrite('/404');
}

const categoryName = category?.name || '';

const { searchOptions } = await parseUrlForProductsListSearch(
  Astro.url.href,
  categoriesListConfig.categories,
  {
    cursorPaging: {
      limit: 10,
    },
    filter: {
      'allCategoriesInfo.categories': {
        $matchItems: [{ _id: category._id! }],
      },
    },
  }
);

const [
  productsListConfig,
  currentCartServiceConfig,
  productsListSearchConfig,
  seoTagsServiceConfig,
] = await Promise.all([
  loadProductsListServiceConfig(searchOptions),
  loadCurrentCartServiceConfig(),
  loadProductsListSearchServiceConfig(Astro.url.href),
  loadSEOTagsServiceConfig({
    pageUrl: Astro.url.href,
    itemData: {
      pageName: categoryName,
      seoData: {
        tags: [
          {
            type: 'title',
            children: `${categoryName} - Store`,
          },
          {
            type: 'meta',
            props: {
              content: `Browse our ${categoryName} products`,
              name: 'description',
            },
          },
        ],
      },
    },
  }),
]);
---

<BaseLayout>
  <SEO.Tags seoTagsServiceConfig={seoTagsServiceConfig} slot="seo-tags" />
  <StoreCollectionPage
    client:load
    currentCartServiceConfig={currentCartServiceConfig}
    categoryServiceConfig={{ category }}
    categoriesListConfig={categoriesListConfig}
    productsListConfig={productsListConfig}
    productsListSearchConfig={productsListSearchConfig}
    slot="body"
  />
</BaseLayout>
