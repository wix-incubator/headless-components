---
import {
  loadEventServiceConfig,
  loadEventListServiceConfig,
  loadTicketDefinitionListServiceConfig,
  loadScheduleListServiceConfig,
  loadOccurrenceListServiceConfig,
} from '@wix/events/services';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import EventDetailsPage from '../../../react-pages/event-details';

const { slug } = Astro.params;

if (!slug || slug.includes('site-bi-navigation')) {
  return Astro.redirect('/');
}

// Load initial data server-side
const [eventServiceConfigResult, eventListServiceConfig] = await Promise.all([
  loadEventServiceConfig(slug),
  loadEventListServiceConfig(),
]);

if (eventServiceConfigResult.type === 'notFound') {
  return Astro.redirect('/404');
}

const eventId = eventServiceConfigResult.config.event._id;
const recurringCategoryId =
  eventServiceConfigResult.config.event.dateAndTimeSettings?.recurringEvents
    ?.categoryId;

const [
  ticketDefinitionListServiceConfig,
  scheduleListServiceConfig,
  occurrenceListServiceConfig,
] = await Promise.all([
  loadTicketDefinitionListServiceConfig(eventId),
  loadScheduleListServiceConfig(eventId, 2),
  loadOccurrenceListServiceConfig(recurringCategoryId),
]);
---

<BaseLayout>
  <title>Event Details</title>
  <meta name="description" content="Event Details" />

  <EventDetailsPage
    client:load
    slot="body"
    eventServiceConfig={eventServiceConfigResult.config}
    eventListServiceConfig={eventListServiceConfig}
    ticketDefinitionListServiceConfig={ticketDefinitionListServiceConfig}
    checkoutServiceConfig={{
      noTicketDefinitionsSelectedError: 'Select a ticket',
      thankYouPageUrl: `${Astro.url.origin}/events/${slug}/thank-you`,
    }}
    scheduleListServiceConfig={scheduleListServiceConfig}
    occurrenceListServiceConfig={occurrenceListServiceConfig}
    eventDetailsPagePath="/events/:slug"
    formPagePath="/events/:slug/form"
  />
</BaseLayout>
